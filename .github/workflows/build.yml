name: Tag and pre deploy
on:
  push:
    branches:
      - master
      - use-github-actions
permissions:
  id-token: write
  contents: write
jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    environment: intg
    steps:
      - uses: actions/checkout@v2
      - uses: fregante/setup-git-user@v1
      - name: Configure AWS credentials from management account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT }}:role/TDRGithubActionsRoleMgmt
          aws-region: eu-west-2
          role-session-name: APIDownloadDependencies
      - name: Get next tag
        run: |
          export EXISTING_VERSION=$(curl ${{ github.api_url }}/repos/nationalarchives/tdr-consignment-api/tags | jq -r '.[0].name')
          echo NEW_VERSION=$(echo "${EXISTING_VERSION:1}" | awk -F. '/[0-9]/{$NF+=1;OFS=".";print}' | xargs -I{} echo "v{}") >> $GITHUB_ENV
      - name: Build new image version
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
        run: |
          MANAGEMENT_ACCOUNT=${{ secrets.MANAGEMENT_ACCOUNT }} sbt assembly
          docker build -t ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/consignment-api:${{ env.NEW_VERSION }} .
          docker push ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com/consignment-api:${{ env.NEW_VERSION }}
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}
      - name: Deploy to integration
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/nationalarchives/tdr-consignment-api/actions/workflows/deploy.yml/dispatches
          ref: master
          inputs: '{"environment": "intg", "toDeploy": "${{ env.NEW_VERSION }}"}'
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
