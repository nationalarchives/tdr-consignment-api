name: Deploy API
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'intg'
      toDeploy:
        description: 'Version to deploy'
        required: true

permissions:
  id-token: write
  contents: read
  actions: write
jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials for ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MANAGEMENT_ACCOUNT }}:role/TDRGithubActionsRoleMgmt
          aws-region: eu-west-2
          role-session-name: APIECRLogin
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.MANAGEMENT_ACCOUNT }}.dkr.ecr.eu-west-2.amazonaws.com
      - name: Tag image
        run: |
          export MANIFEST=$(aws ecr batch-get-image --repository-name consignment-api --image-ids imageTag=${{ github.event.inputs.to_deploy }} --output json | jq --raw-output '.images[0].imageManifest')
          aws ecr put-image --repository-name consignment-api --image-tag ${{ github.event.inputs.environment }} --image-manifest "$MANIFEST"
      - name: Configure AWS credentials for ECS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/TDRGitHubECSUpdateRole${{ secrets.TITLE_STAGE }}
          aws-region: eu-west-2
          role-session-name: APIECRLogin
      - name: Deploy to ECS
        run: aws ecs update-service --service consignmentapi_service_${{ github.event.inputs.environment }} --cluster consignmentapi_${{ github.event.inputs.environment }} --force-new-deployment
      - name: Send service updated message
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "service" : "Consignment API",
              "version" : "${{ github.event.inputs.toDeploy }}",
              "environment": "${{ github.event.inputs.environment }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_SUCCESS_WORKFLOW }}
      - name: Update release branch
        run: |
          git branch -f release-${{ github.event.inputs.environment }} HEAD
          git push -f origin release-${{ github.event.inputs.environment }}
      - name: Run E2E tests
        if: github.event.inputs.environment != 'prod'
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/nationalarchives/tdr-e2e-tests/actions/workflows/ci.yml/dispatches
          ref: master
          inputs: "{\"environment\": \"${{ github.event.inputs.environment }}\"}"
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
      - name: Send failure message
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        if: ${{ failure() }}
        with:
          payload: |
            {
              "service" : "Consignment API",
              "version" : "${{ github.event.inputs.toDeploy }}",
              "environment": "${{ github.event.inputs.environment }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_FAILURE_WORKFLOW }}
